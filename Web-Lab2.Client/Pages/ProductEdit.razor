@page "/products/create"
@page "/products/edit/{Id:int}"
@using Web_Lab2.Client.Models
@using Web_Lab2.Client.Services
@inject ProductService ProductService
@inject NavigationManager NavigationManager

<h3>@pageTitle</h3>

<div class="row">
    <div class="col-md-6">
        <EditForm Model="@product" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="productNumber" class="form-label">Product Number</label>
                <InputText id="productNumber" @bind-Value="product.ProductNumber" class="form-control" disabled="@isEditMode" />
                <ValidationMessage For="@(() => product.ProductNumber)" />
            </div>

            <div class="mb-3">
                <label for="name" class="form-label">Name</label>
                <InputText id="name" @bind-Value="product.Name" class="form-control" />
                <ValidationMessage For="@(() => product.Name)" />
            </div>

            <div class="mb-3">
                <label for="description" class="form-label">Description</label>
                <InputTextArea id="description" @bind-Value="product.Description" class="form-control" rows="3" />
                <ValidationMessage For="@(() => product.Description)" />
            </div>

            <div class="mb-3">
                <label for="price" class="form-label">Price</label>
                <InputNumber id="price" @bind-Value="product.Price" class="form-control" />
                <ValidationMessage For="@(() => product.Price)" />
            </div>

            <div class="mb-3">
                <label for="category" class="form-label">Category</label>
                <InputText id="category" @bind-Value="product.Category" class="form-control" />
                <ValidationMessage For="@(() => product.Category)" />
            </div>

            @if (isEditMode)
            {
                <div class="mb-3 form-check">
                    <InputCheckbox id="isDiscontinued" @bind-Value="product.IsDiscontinued" class="form-check-input" />
                    <label class="form-check-label" for="isDiscontinued">Discontinued</label>
                </div>
            }

            <div class="mb-3">
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" @onclick='() => NavigationManager.NavigateTo("/products")'>Cancel</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int? Id { get; set; }

    private Product product = new Product();
    private string? pageTitle;
    private bool isEditMode => Id.HasValue;

    protected override async Task OnInitializedAsync()
    {
        if (isEditMode)
        {
            pageTitle = "Edit Product";
            product = await ProductService.GetProductAsync(Id.Value);
        }
        else
        {
            pageTitle = "Create New Product";
            product = new Product
            {
                IsDiscontinued = false
            };
        }
    }

    private async Task HandleValidSubmit()
    {
        if (isEditMode)
        {
            await ProductService.UpdateProductAsync(Id.Value, product);
        }
        else
        {
            await ProductService.CreateProductAsync(product);
        }

        NavigationManager.NavigateTo("/products");
    }
}